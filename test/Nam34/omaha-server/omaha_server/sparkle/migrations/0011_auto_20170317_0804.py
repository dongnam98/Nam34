# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-03-17 08:04


from django.db import migrations
from django.db.models import F

def convert_version_string_to_int(string, number_bits):
    """
    Take in a verison string e.g. '3.0.1'
    Store it as a converted int: 3*(2**number_bits[0])+0*(2**number_bits[1])+1*(2**number_bits[2])

    >>> convert_version_string_to_int('3.0.1',[8,8,16])
    50331649
    """
    numbers = [int(number_string) for number_string in string.split(".")]

    if len(numbers) > len(number_bits):
        raise NotImplementedError(
            "Versions with more than {0} decimal places are not supported".format(
                len(number_bits) - 1))

    # add 0s for missing numbers
    numbers.extend([0] * (len(number_bits) - len(numbers)))

    #convert to single int and return
    number = 0
    total_bits = 0
    for num, bits in reversed(list(zip(numbers, number_bits))):
        max_num = (bits + 1) - 1
        if num >= 1 << max_num:
            raise ValueError(
                "Number {0} cannot be stored with only {1} bits. Max is {2}".format(num, bits,
                                                                                    max_num))
        number += num << total_bits
        total_bits += bits

    return number

def char_to_version(apps, schema_editor):
    SparkleVersion = apps.get_model("sparkle", "SparkleVersion")
    versions = SparkleVersion.objects.iterator()
    for version in versions:
        version._version = convert_version_string_to_int(version.version, [16, 16])
        if version.short_version:
            version._short_version = convert_version_string_to_int(version.short_version, [8, 8, 16, 16])
        version.save()




class Migration(migrations.Migration):

    dependencies = [
        ('sparkle', '0010_auto_20170317_0804'),
    ]

    operations = [
        migrations.RunPython(
            char_to_version,
            reverse_code=migrations.RunPython.noop
        ),
    ]
